# Generated by Django 3.1.7 on 2021-04-08 06:27

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BidCrawling',
            fields=[
                ('bid', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.TextField(blank=True, null=True)),
                ('writer', models.TextField(blank=True, null=True)),
                ('translator', models.TextField(blank=True, null=True)),
                ('painter', models.TextField(blank=True, null=True)),
                ('publisher', models.TextField(blank=True, null=True)),
                ('publishdate', models.DateField(blank=True, db_column='publishDate', null=True)),
                ('intro', models.TextField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('authorintro', models.TextField(blank=True, db_column='authorIntro', null=True)),
                ('categorytop', models.TextField(blank=True, db_column='categoryTop', null=True)),
                ('categorymiddle', models.TextField(blank=True, db_column='categoryMiddle', null=True)),
                ('categorybottom', models.TextField(blank=True, db_column='categoryBottom', null=True)),
                ('isbn', models.TextField(blank=True, db_column='ISBN', null=True)),
                ('grade', models.IntegerField(blank=True, null=True)),
                ('review', models.TextField(blank=True, null=True)),
                ('image', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bid_crawling',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BookBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('author', models.CharField(max_length=30)),
                ('price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('pages', models.IntegerField(blank=True, null=True)),
                ('book_type', models.PositiveSmallIntegerField()),
                ('timestamp', models.DateField()),
            ],
            options={
                'db_table': 'book_book',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BookCrawling',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('searchsubject', models.CharField(blank=True, db_column='searchSubject', max_length=500, null=True)),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('writer', models.CharField(blank=True, max_length=500, null=True)),
                ('translator', models.CharField(blank=True, max_length=500, null=True)),
                ('painter', models.CharField(blank=True, max_length=500, null=True)),
                ('publisher', models.CharField(blank=True, max_length=500, null=True)),
                ('publishdate', models.DateField(blank=True, db_column='publishDate', null=True)),
                ('intro', models.TextField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('authorintro', models.TextField(blank=True, db_column='authorIntro', null=True)),
                ('categorytop', models.CharField(blank=True, db_column='categoryTop', max_length=500, null=True)),
                ('categorymiddle', models.CharField(blank=True, db_column='categoryMiddle', max_length=500, null=True)),
                ('categorybottom', models.CharField(blank=True, db_column='categoryBottom', max_length=500, null=True)),
                ('bid', models.IntegerField(blank=True, null=True)),
                ('isbn', models.CharField(blank=True, db_column='ISBN', max_length=50, null=True)),
                ('grade', models.DecimalField(blank=True, decimal_places=0, max_digits=10, null=True)),
                ('review', models.IntegerField(blank=True, null=True)),
                ('image', models.CharField(blank=True, max_length=5000, null=True)),
            ],
            options={
                'db_table': 'book_crawling',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bottomcateogry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bottomcategoryname', models.TextField(blank=True, db_column='bottomCategoryName', null=True)),
                ('bottomcategorynum', models.TextField(blank=True, db_column='bottomCategoryNum', null=True)),
                ('middlecategorynum', models.TextField(blank=True, db_column='middleCategoryNum', null=True)),
                ('topcategorynum', models.TextField(blank=True, db_column='topCategoryNum', null=True)),
            ],
            options={
                'db_table': 'bottomcateogry',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Middlecategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('middlecategoryname', models.TextField(blank=True, db_column='middleCategoryName', null=True)),
                ('middlecategorynum', models.TextField(blank=True, db_column='middleCategoryNum', null=True)),
                ('topcategorynum', models.TextField(blank=True, db_column='topCategoryNum', null=True)),
            ],
            options={
                'db_table': 'middlecategory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taskid', models.IntegerField(blank=True, db_column='taskId', null=True)),
                ('taskcontent', models.CharField(blank=True, db_column='taskContent', max_length=5000, null=True)),
                ('str_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('complete', models.CharField(blank=True, max_length=50, null=True)),
                ('errordetail', models.CharField(blank=True, db_column='errorDetail', max_length=5000, null=True)),
                ('crawlernum', models.IntegerField(blank=True, db_column='crawlerNum', null=True)),
            ],
            options={
                'db_table': 'task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Topcategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tobcategoryname', models.TextField(blank=True, db_column='tobCategoryName', null=True)),
                ('topcategorynum', models.TextField(blank=True, db_column='topCategoryNum', null=True)),
            ],
            options={
                'db_table': 'topcategory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WriterInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('booktitle', models.TextField(blank=True, db_column='bookTitle', null=True)),
                ('bid', models.TextField(blank=True, null=True)),
                ('isbn', models.TextField(blank=True, null=True)),
                ('link', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'writer_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('publication_date', models.DateField(null=True)),
                ('author', models.CharField(blank=True, max_length=30)),
                ('price', models.DecimalField(decimal_places=2, max_digits=5)),
                ('pages', models.IntegerField(blank=True, null=True)),
                ('book_type', models.PositiveSmallIntegerField(choices=[(1, 'Hardcover'), (2, 'Paperback'), (3, 'E-book')])),
                ('timestamp', models.DateField(auto_now_add=True)),
            ],
        ),
    ]
